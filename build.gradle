plugins {
    id "io.papermc.paperweight.userdev" version "1.5.6"
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "java"
}

group = 'com.github.simuxmc'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.20.1-R0.1-SNAPSHOT")
    compileOnly "io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT"
    implementation "com.esotericsoftware:kryo:5.5.0"
    implementation "dev.jorel:commandapi-bukkit-shade:9.1.0"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7.1"
    compileOnly "org.jspecify:jspecify:0.2.0"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
